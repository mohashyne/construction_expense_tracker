version: '3.8'

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=construction_tracker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secure_postgres_password_change_me
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    build: .
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:secure_postgres_password_change_me@db:5432/construction_tracker
    depends_on:
      - db
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - web
    restart: unless-stopped

  celery:
    build: .
    command: celery -A construction_tracker worker -l info
    volumes:
      - media_volume:/app/media
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:secure_postgres_password_change_me@db:5432/construction_tracker
    depends_on:
      - db
      - redis
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A construction_tracker beat -l info
    volumes:
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:secure_postgres_password_change_me@db:5432/construction_tracker
    depends_on:
      - db
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
