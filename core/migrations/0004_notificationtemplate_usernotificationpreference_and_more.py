# Generated by Django 5.2.7 on 2025-10-18 18:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("core", "0003_add_team_member_role"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("expense_created", "Expense Created"),
                            ("expense_updated", "Expense Updated"),
                            ("expense_approved", "Expense Approved"),
                            ("expense_rejected", "Expense Rejected"),
                            ("expense_overbudget", "Expense Over Budget"),
                            ("project_created", "Project Created"),
                            ("project_updated", "Project Updated"),
                            ("project_milestone", "Project Milestone Reached"),
                            ("project_overdue", "Project Overdue"),
                            ("project_completed", "Project Completed"),
                            ("budget_warning", "Budget Warning (75%)"),
                            ("budget_critical", "Budget Critical (90%)"),
                            ("contractor_assigned", "Contractor Assigned"),
                            ("contractor_removed", "Contractor Removed"),
                            ("user_invited", "User Invited"),
                            ("user_joined", "User Joined Company"),
                            ("role_changed", "Role Changed"),
                            ("system_update", "System Update"),
                            ("system_maintenance", "System Maintenance"),
                            ("security_alert", "Security Alert"),
                            ("report_ready", "Report Ready"),
                            ("backup_completed", "Backup Completed"),
                        ],
                        max_length=50,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "default_priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "control_level",
                    models.CharField(
                        choices=[
                            ("admin_only", "Admin Only - Users cannot disable"),
                            ("admin_default", "Admin Default - Users can override"),
                            ("user_choice", "User Choice - Users control entirely"),
                            ("role_based", "Role Based - Depends on user role"),
                        ],
                        default="user_choice",
                        max_length=20,
                    ),
                ),
                ("default_in_app", models.BooleanField(default=True)),
                ("default_email", models.BooleanField(default=True)),
                ("default_sms", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserNotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("in_app_enabled", models.BooleanField(default=True)),
                ("email_enabled", models.BooleanField(default=True)),
                ("sms_enabled", models.BooleanField(default=False)),
                ("is_enabled", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["notification_template__name"],
            },
        ),
        migrations.RemoveIndex(
            model_name="notification",
            name="core_notifi_recipie_aeffaf_idx",
        ),
        migrations.RemoveField(
            model_name="notification",
            name="is_read",
        ),
        migrations.RemoveField(
            model_name="notification",
            name="is_sent_email",
        ),
        migrations.RemoveField(
            model_name="notification",
            name="notification_type",
        ),
        migrations.AddField(
            model_name="notification",
            name="email_sent_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="notification",
            name="email_status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("sent", "Sent"),
                    ("failed", "Failed"),
                    ("delivered", "Delivered"),
                    ("read", "Read"),
                ],
                default="pending",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="in_app_sent_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="notification",
            name="in_app_status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("sent", "Sent"),
                    ("failed", "Failed"),
                    ("delivered", "Delivered"),
                    ("read", "Read"),
                ],
                default="pending",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="metadata",
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name="notification",
            name="sms_sent_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="notification",
            name="sms_status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("sent", "Sent"),
                    ("failed", "Failed"),
                    ("delivered", "Delivered"),
                    ("read", "Read"),
                ],
                default="pending",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="role",
            name="is_team_member",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="notificationtemplate",
            name="allowed_roles",
            field=models.ManyToManyField(
                blank=True,
                help_text="Roles that can receive this notification",
                to="core.role",
            ),
        ),
        migrations.AddField(
            model_name="notificationtemplate",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notification_templates",
                to="core.company",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="notification_template",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to="core.notificationtemplate",
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["recipient", "read_at"], name="core_notifi_recipie_43dea6_idx"
            ),
        ),
        migrations.AddField(
            model_name="usernotificationpreference",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_notification_preferences",
                to="core.company",
            ),
        ),
        migrations.AddField(
            model_name="usernotificationpreference",
            name="notification_template",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_preferences",
                to="core.notificationtemplate",
            ),
        ),
        migrations.AddField(
            model_name="usernotificationpreference",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notification_preferences",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="notificationtemplate",
            unique_together={("company", "notification_type")},
        ),
        migrations.AlterUniqueTogether(
            name="usernotificationpreference",
            unique_together={("user", "company", "notification_template")},
        ),
    ]
