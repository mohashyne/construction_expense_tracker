# Generated by Django 5.2.7 on 2025-10-18 21:12

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0004_notificationtemplate_usernotificationpreference_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="userprofile",
            name="activated_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="activated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activated_users",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="activation_requested_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="is_account_active",
            field=models.BooleanField(
                default=False, help_text="Account activated by SuperOwner"
            ),
        ),
        migrations.CreateModel(
            name="SuperOwner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_primary_owner",
                    models.BooleanField(
                        default=False, help_text="Primary app owner - cannot be revoked"
                    ),
                ),
                (
                    "delegation_level",
                    models.CharField(
                        choices=[
                            ("full", "Full Admin Access"),
                            ("company_management", "Company Management Only"),
                            ("user_management", "User Management Only"),
                            ("billing_management", "Billing Management Only"),
                            ("read_only", "Read-Only Access"),
                        ],
                        default="read_only",
                        max_length=30,
                    ),
                ),
                ("can_manage_companies", models.BooleanField(default=False)),
                ("can_manage_users", models.BooleanField(default=False)),
                ("can_activate_accounts", models.BooleanField(default=False)),
                ("can_access_django_admin", models.BooleanField(default=False)),
                ("can_delegate_permissions", models.BooleanField(default=False)),
                ("can_manage_billing", models.BooleanField(default=False)),
                ("can_view_system_analytics", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "allowed_companies",
                    models.ManyToManyField(
                        blank=True,
                        help_text="If empty, can manage all companies",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_super_owners",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="super_owner_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Super Owner",
                "verbose_name_plural": "Super Owners",
                "ordering": [
                    "-is_primary_owner",
                    "user__first_name",
                    "user__last_name",
                ],
            },
        ),
        migrations.CreateModel(
            name="AccountActivationRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "request_type",
                    models.CharField(
                        choices=[
                            ("company_registration", "Company Registration"),
                            ("user_invitation", "User Invitation"),
                            ("user_registration", "User Registration"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("company_name", models.CharField(blank=True, max_length=200)),
                ("company_description", models.TextField(blank=True)),
                ("company_website", models.URLField(blank=True)),
                ("requested_role", models.CharField(blank=True, max_length=100)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True)),
                ("activation_token", models.CharField(max_length=100, unique=True)),
                ("expires_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_activation_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_activation_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.company",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "created_at"],
                        name="core_accoun_status_afba06_idx",
                    ),
                    models.Index(
                        fields=["email", "status"], name="core_accoun_email_f84ae2_idx"
                    ),
                    models.Index(
                        fields=["activation_token"],
                        name="core_accoun_activat_d9157b_idx",
                    ),
                ],
            },
        ),
    ]
